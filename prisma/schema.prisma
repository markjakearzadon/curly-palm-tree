generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Group {
  id           Int            @id @default(autoincrement())
  title        String
  creatorId    String
  createdAt    DateTime       @default(now())
  User         User           @relation(fields: [creatorId], references: [id])
  GroupMember  GroupMember[]
  GroupMessage GroupMessage[]
}

model GroupMember {
  id        Int      @id @default(autoincrement())
  memberId  String
  groupId   Int
  createdAt DateTime @default(now())
  Group     Group    @relation(fields: [groupId], references: [id])
  User      User     @relation(fields: [memberId], references: [id])
}

model GroupMessage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  message   String
  userId    String
  groupId   Int
  Group     Group    @relation(fields: [groupId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String         @id
  username       String?        @unique
  hashedPassword String?
  name           String?
  email          String?        @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime       @default(now())
  Account        Account[]
  Group          Group[]
  GroupMember    GroupMember[]
  GroupMessage   GroupMessage[]
  Session        Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
