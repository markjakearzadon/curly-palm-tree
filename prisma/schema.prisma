// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String         @id @default(cuid())
  username       String?        @unique
  hashedPassword String?
  name           String?
  email          String?        @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  createdAt      DateTime       @default(now())
  group          Group[]
  groupMember    GroupMember[]
  groupMessage   GroupMessage[]
}

model Group {
  id        Int            @id @default(autoincrement())
  title     String
  creator   User           @relation(fields: [creatorId], references: [id])
  creatorId String
  createdAt DateTime       @default(now())
  members   GroupMember[]
  messages  GroupMessage[]
}

model GroupMessage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  message   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   Int
}

model GroupMember {
  id        Int      @id @default(autoincrement())
  member    User     @relation(fields: [memberId], references: [id])
  memberId  String
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   Int
  createdAt DateTime @default(now())
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
